//
//  WorkWithViewController.swift
//  Devlight
//
//  Created by Anderson Oliveira on 09/11/18.
//  Copyright (c) 2018 Anderson Oliveira. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import UIKit

protocol WorkWithViewControllerInput {
    
}

protocol WorkWithViewControllerOutput {
    
}

class WorkWithViewController: UIViewController, WorkWithViewControllerInput {
    
    @IBOutlet weak var collectionView: UICollectionView!
    
    var output: WorkWithViewControllerOutput?
    var router: WorkWithRouter?
    let collectionViewCellHeightCoefficient: CGFloat = 1.0
    let collectionViewCellWidthCoefficient: CGFloat = 0.6
    var workServices: [WorkServices] = WorkServices.mockedWorkServices

    
    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        WorkWithConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupCollectionView()
        registerCells()
    }
    
    // MARK: Requests
    
    
    // MARK: Display logic
    
}

extension WorkWithViewController {
    
    private func setupCollectionView() {
        collectionView.backgroundColor = .clear
    }
    
    private func registerCells() {
        let cellNib = UINib(nibName: WorkWithCollectionViewCell.cellIdentifier, bundle: nil)
        collectionView.register(cellNib, forCellWithReuseIdentifier: WorkWithCollectionViewCell.cellIdentifier)
    }
}

//This should be on configurator but for some reason storyboard doesn't detect ViewController's name if placed there
extension WorkWithViewController: WorkWithPresenterOutput {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(for: segue)
    }
}
